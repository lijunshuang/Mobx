{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _initializerDefineProperty from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _temp,\n    _dec,\n    _dec2,\n    _class3,\n    _descriptor4,\n    _temp2,\n    _jsxFileName = \"/Users/lijunshuang/Documents/GitHub/mobx-test/src/App.js\",\n    _class5,\n    _class6,\n    _temp3;\n\nimport React, { Component, Fragment } from \"react\";\nimport { observable, action, computed } from 'mobx';\nimport PropTypes from 'prop-types';\nimport { observer, PropTypes as ObservablePropTypes } from 'mobx-react'; // import Page from './pages/Index'\n\nimport \"./App.scss\";\nvar Todo = (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  function Todo(title) {\n    _classCallCheck(this, Todo);\n\n    _initializerDefineProperty(this, \"id\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"title\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"finished\", _descriptor3, this);\n\n    this.title = title;\n  }\n\n  _createClass(Todo, [{\n    key: \"finishedToggle\",\n    value: function finishedToggle() {\n      this.finished = !this.finished;\n    }\n  }]);\n\n  return Todo;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"id\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return Math.random();\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"title\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return \"\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"finished\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"finishedToggle\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"finishedToggle\"), _class.prototype)), _class);\nvar Store = (_dec = action.bound, _dec2 = action.bound, (_class3 = (_temp2 =\n/*#__PURE__*/\nfunction () {\n  function Store() {\n    _classCallCheck(this, Store);\n\n    _initializerDefineProperty(this, \"todos\", _descriptor4, this);\n  }\n\n  _createClass(Store, [{\n    key: \"addTodo\",\n    value: function addTodo(title) {\n      this.todos.unshift(new Todo(title));\n    }\n  }, {\n    key: \"removeTodo\",\n    value: function removeTodo(todo) {\n      this.todos.remove(todo);\n    } // 计算属性\n\n  }, {\n    key: \"unfinished\",\n    get: function get() {\n      return this.todos.filter(function (todo) {\n        return !todo.finished;\n      }).length;\n    }\n  }]);\n\n  return Store;\n}(), _temp2), (_descriptor4 = _applyDecoratedDescriptor(_class3.prototype, \"todos\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class3.prototype, \"addTodo\", [_dec], Object.getOwnPropertyDescriptor(_class3.prototype, \"addTodo\"), _class3.prototype), _applyDecoratedDescriptor(_class3.prototype, \"removeTodo\", [_dec2], Object.getOwnPropertyDescriptor(_class3.prototype, \"removeTodo\"), _class3.prototype), _applyDecoratedDescriptor(_class3.prototype, \"unfinished\", [computed], Object.getOwnPropertyDescriptor(_class3.prototype, \"unfinished\"), _class3.prototype)), _class3));\nvar store = new Store();\n\nvar TodoItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoItem, _Component);\n\n  function TodoItem() {\n    _classCallCheck(this, TodoItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoItem).apply(this, arguments));\n  }\n\n  _createClass(TodoItem, [{\n    key: \"render\",\n    value: function render() {\n      var store = this.props.store;\n      var todo = this.props.todo;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"toggle\",\n        onChange: function onChange() {\n          return todo.finishedToggle();\n        },\n        checked: todo.finished,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: ['title', todo.finished && 'finished'].join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, todo.title), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoItem;\n}(Component);\n\nTodoItem.propTypes = {\n  // 传入todo\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    finished: PropTypes.bool.isRequired,\n    finishedToggle: PropTypes.func\n  }).isRequired,\n  // 传入store\n  store: PropTypes.shape({\n    todos: PropTypes.array.isRequired,\n    delTodo: PropTypes.func.isRequired\n  }).isRequired\n};\n\nvar TodoList = observer(_class5 = (_temp3 = _class6 =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(TodoList, _Component2);\n\n  function TodoList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputVal: ''\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var store = _this.props.store;\n      var inputVal = _this.state.inputVal;\n      store.addTodo(inputVal);\n\n      _this.setState({\n        inputVal: ''\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var inputVal = e.target.value;\n\n      _this.setState({\n        inputVal: inputVal\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var store = this.props.store;\n      var todos = store.todos;\n      return React.createElement(\"div\", {\n        className: \"todo-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        placeholder: \"What needs to finished ?\",\n        value: this.state.inputVal,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(\"li\", {\n          key: todo.id,\n          onClick: function onClick() {\n            return todo.finishedToggle();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(TodoItem, {\n          todo: todo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"delete\",\n          onClick: function onClick(e) {\n            return _this2.store.removeTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"X\"));\n      })), React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" \", store.unfinished, \" item(s) is unfinished !\"));\n    }\n  }]);\n\n  return TodoList;\n}(Component), _class6.propTypes = {\n  store: PropTypes.shape({\n    // 对store内的数据进行类型校验\n    addTodo: PropTypes.func,\n    // todos为observableArray，其内数据为observableObject，isRequire表示store、todos必须存在\n    todos: ObservablePropTypes.observableArrayOf(ObservablePropTypes.observableObject).isRequired\n  }).isRequired\n}, _temp3)) || _class5;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(App, _Component3);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(TodoList, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/lijunshuang/Documents/GitHub/mobx-test/src/App.js"],"names":["React","Component","Fragment","observable","action","computed","PropTypes","observer","ObservablePropTypes","Todo","title","finished","Math","random","Store","bound","todos","unshift","todo","remove","filter","length","store","TodoItem","props","finishedToggle","join","propTypes","shape","id","number","isRequired","string","bool","func","array","delTodo","TodoList","state","inputVal","handleSubmit","e","preventDefault","addTodo","setState","handleChange","target","value","map","removeTodo","unfinished","observableArrayOf","observableObject","App"],"mappings":"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","sourcesContent":["import React, { Component, Fragment} from \"react\";\nimport { observable, action, computed } from 'mobx'\nimport PropTypes from 'prop-types'\nimport { observer, PropTypes as ObservablePropTypes } from 'mobx-react'\n\n// import Page from './pages/Index'\nimport \"./App.scss\"\nclass Todo { \n  @observable id = Math.random();\n  @observable title = \"\"\n  @observable finished = false\n\n  constructor (title) {\n    this.title =  title;\n  }\n\n  @action finishedToggle() {\n    this.finished = !this.finished;\n  }\n}\nclass Store { \n  @observable todos = [];\n  @action.bound addTodo(title) {    \n    this.todos.unshift(new Todo(title));\n  }\n  @action.bound removeTodo(todo) {    \n    this.todos.remove(todo);\n  }\n  // 计算属性\n  @computed get unfinished() { \n    return this.todos.filter(todo=>!todo.finished).length\n  }\n}\n\nconst store = new Store()\n\nclass TodoItem extends Component { \n  static propTypes = {\n    // 传入todo\n    todo: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      finished: PropTypes.bool.isRequired,\n      finishedToggle:PropTypes.func\n    }).isRequired,\n    // 传入store\n    store: PropTypes.shape({\n      todos: PropTypes.array.isRequired,\n      delTodo:PropTypes.func.isRequired\n    }).isRequired\n  }\n\n  render() {\n    const store = this.props.store\n    const todo = this.props.todo\n    return (\n      <Fragment>\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onChange={() => todo.finishedToggle()}\n          checked={todo.finished}\n        />\n        <span className={['title',todo.finished && 'finished'].join(' ')}>{todo.title}</span>\n        <span></span>\n      </Fragment>\n    )\n  }\n}\n@observer\nclass TodoList extends Component {\n  static propTypes = {\n    store: PropTypes.shape({\n      // 对store内的数据进行类型校验\n      addTodo: PropTypes.func,\n      // todos为observableArray，其内数据为observableObject，isRequire表示store、todos必须存在\n      todos: ObservablePropTypes.observableArrayOf(ObservablePropTypes.observableObject).isRequired\n    }).isRequired\n\n  }\n  state = {\n    inputVal :''\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const store = this.props.store\n    const inputVal = this.state.inputVal\n    store.addTodo(inputVal)\n    this.setState({\n      inputVal: ''\n    })\n\n  }\n  handleChange = (e) => { \n    const inputVal = e.target.value\n    this.setState({\n      inputVal\n    })\n  }\n  render() {\n    const store = this.props.store\n    const todos = store.todos\n    return (\n      <div className=\"todo-list\">\n        <header>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"What needs to finished ?\"\n              value={this.state.inputVal}\n              onChange={this.handleChange}\n            />\n          </form>\n        </header>\n        <ul>\n          {\n            todos.map(todo => <li key={todo.id} onClick={() => todo.finishedToggle()}>\n              <TodoItem todo={todo} />\n              <span className=\"delete\" onClick={e=>this.store.removeTodo(todo)}>X</span>\n            </li>)\n          }\n        </ul>\n        <footer> {store.unfinished} item(s) is unfinished !</footer>\n      </div>\n    )\n  }\n}\nclass App extends Component {\n  render() {\n    return <div>\n\n      <TodoList store={store} />\n    </div>;\n  }\n}\nexport default App"]},"metadata":{},"sourceType":"module"}