{"ast":null,"code":"import _classCallCheck from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lijunshuang/Documents/GitHub/mobx-test/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _class,\n    _class2,\n    _temp,\n    _jsxFileName = \"/Users/lijunshuang/Documents/GitHub/mobx-test/src/pages/Index.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, PropTypes as ObservabelPropTypes } from 'mobx-react';\nimport './index.scss';\n\nvar TodoList = observer(_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoList, _Component);\n\n  function TodoList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputVal: ''\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var store = _this.props.store;\n      var inputVal = _this.state.inputVal;\n      store.addToto(inputVal);\n\n      _this.setState({\n        inputVal: ''\n      });\n    };\n\n    _this.haneldChange = function (e) {\n      var inputVal = e.target.value;\n\n      _this.setState({\n        inputVal: inputVal\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"todo-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        placeholder: \"What needs to finished ?\",\n        value: this.state.inputVal,\n        onChange: this.haneldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Refresh\"));\n    }\n  }]);\n\n  return TodoList;\n}(Component), _class2.propTypes = {\n  addToto: PropTypes.func,\n  store: PropTypes.shape({\n    todos: ObservabelPropTypes.observableArrayOf(ObservabelPropTypes.observableObject).isRequired\n  }).isRequired\n}, _temp)) || _class;\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/lijunshuang/Documents/GitHub/mobx-test/src/pages/Index.jsx"],"names":["React","Component","PropTypes","observer","ObservabelPropTypes","TodoList","state","inputVal","handleSubmit","e","preventDefault","store","props","addToto","setState","haneldChange","target","value","propTypes","func","shape","todos","observableArrayOf","observableObject","isRequired"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBD,SAAS,IAAIE,mBAAhC,QAA2D,YAA3D;AACA,OAAO,cAAP;;IAGMC,Q,GADLF,Q;;;;;;;;;;;;;;;;;UASCG,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAIRC,Y,GAAe,UAACC,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG,MAAKC,KAAL,CAAWD,KAAzB;AACA,UAAMJ,QAAQ,GAAG,MAAKD,KAAL,CAAWC,QAA5B;AACAI,MAAAA,KAAK,CAACE,OAAN,CAAcN,QAAd;;AACA,YAAKO,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE;AADE,OAAd;AAID,K;;UACDQ,Y,GAAe,UAACN,CAAD,EAAO;AACpB,UAAMF,QAAQ,GAAGE,CAAC,CAACO,MAAF,CAASC,KAA1B;;AACA,YAAKH,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGD,K;;;;;;;6BACQ;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,WAAW,EAAC,0BAHd;AAIE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,QAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKQ,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,CADF;AAmBD;;;;EAjDoBd,S,WACdiB,S,GAAY;AACjBL,EAAAA,OAAO,EAAEX,SAAS,CAACiB,IADF;AAEjBR,EAAAA,KAAK,EAAET,SAAS,CAACkB,KAAV,CAAgB;AACrBC,IAAAA,KAAK,EAAEjB,mBAAmB,CAACkB,iBAApB,CAAsClB,mBAAmB,CAACmB,gBAA1D,EAA4EC;AAD9D,GAAhB,EAEJA;AAJc,C;;AAkDrB,eAAenB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { observer, PropTypes as ObservabelPropTypes } from 'mobx-react'\nimport './index.scss'\n\n@observer\nclass TodoList extends Component {\n  static propTypes = {\n    addToto: PropTypes.func,\n    store: PropTypes.shape({\n      todos: ObservabelPropTypes.observableArrayOf(ObservabelPropTypes.observableObject).isRequired\n    }).isRequired\n\n  }\n  state = {\n    inputVal :''\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const store = this.props.store\n    const inputVal = this.state.inputVal\n    store.addToto(inputVal)\n    this.setState({\n      inputVal: ''\n    })\n\n  }\n  haneldChange = (e) => { \n    const inputVal = e.target.value\n    this.setState({\n      inputVal\n    })\n  }\n  render() {\n\n    return (\n      <div className=\"todo-list\">\n        <header>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"What needs to finished ?\"\n              value={this.state.inputVal}\n              onChange={this.haneldChange}\n\n            />\n          </form>\n        </header>\n        <ul></ul>\n        <footer></footer>\n        <button>Refresh</button>\n      </div>\n    )\n  }\n}\nexport default TodoList"]},"metadata":{},"sourceType":"module"}